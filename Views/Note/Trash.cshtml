@model notes.Models.NoteListContainer
@using Microsoft.AspNetCore.Authorization
@using notes.Helper
@inject IAuthorizationService AuthorizationService

@{
	ViewBag.Title = "Trash - ";
}

<div class="row">
	<div class="col-lg-12">
		<div class="pb-2 mt-4 mb-2 border-bottom">
			<h1>
				<i class="fa fa-fw fa-trash"></i> Trash
			</h1>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-lg-12">
		@if(Model.Notes.Count() > 0) {
			if((await AuthorizationService.AuthorizeAsync(User, "AdministratorOnly")).Succeeded) {
				<form role="form" action="@Url.Action("delete", "note")" method="post" enctype="multipart/form-data" id="trash-form" >
					<div class="table-responsive">
						<table class="table">
							<thead>
								<tr>
									<th style="width: 30px;"><input type="checkbox" id="selectAll" /></th>
									<th>Title</th>
									<th style="text-align: right; width: 170px;"><i class="fa fa-fw fa-clock-o"></i> Last modified</th>
								</tr>
							</thead>
							<tbody>
								@foreach(var note in Model.Notes) {
								<tr>
									<td><input type="checkbox" name="id" value="@note.Id" /></td>
									<td><a href="@Url.RouteUrl("view", new { id = note.Id, slug = note.Title.ToSlug() })">@note.Title</a></td>
									<td><span class="pull-right text-muted small"><em>@note.Age</em></span></td>
								</tr>
								}
							</tbody>
						</table>
					</div>
					<button type="submit" class="btn btn-primary"><i class="fa fa-fw fa-check-square-o"></i> Delete</button>
				</form>
			} else {
				@await Html.PartialAsync("_PartialNotes", Model.Notes)
			}
		} else {
			@:The trash is empty.
		}
	</div>
</div>

@if(Model.Pager.HasNext) {
<div class="row">
	<div class="col-lg-12">
		<nav>
			<ul class="pagination justify-content-center">
				<li class="page-item"><a class="page-link" href="@Url.RouteUrl("trash", new { after = Model.Pager.NextPage })" rel="nofollow next">Older</a></li>
			</ul>
		</nav>
	</div>
</div>
}
