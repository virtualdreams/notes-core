@using Microsoft.AspNetCore.Authorization
@using notes
@inject IAuthorizationService AuthorizationService
@inject Settings Options

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<meta name="description" content="@Options.SiteName">
		<meta name="author" content="">
		<meta name="version" content="@await Component.InvokeAsync("Version")">

		<title>@ViewBag.Title@Options.SiteName - Administration</title>
		
		@await Html.PartialAsync("_StylesPartial")

		@await Html.PartialAsync("_IconPartial")
	</head>
	<body>
		<!-- Navigation -->
		<nav class="navbar navbar-expand-lg navbar-light bg-light">
			<div class="container">
				<!-- brand -->
				<a class="navbar-brand" href="/">Notes - Administration</a>
				<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				
				<!-- top menu items -->
				<div class="collapse navbar-collapse" id="navbarSupportedContent">
					<ul class="navbar-nav mr-auto">
						<li class="nav-item">
							<a class="nav-link" href="@Url.Action("index", "account", new { area = "admin" })"><i class="fa fa-fw fa-users"></i> Accounts</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="@Url.Action("index", "maintenance", new { area = "admin" })"><i class="fa fa-fw fa-cog"></i> Maintenance</a>
						</li>
					</ul>
					<ul class="navbar-nav">
						<li class="nav-item dropdown">
							<a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fa fa-fw fa-user"></i> @await Component.InvokeAsync("DisplayName") <span class="caret"></span></a>
							<div class="dropdown-menu" aria-labelledby="navbarDropdown">
								@if((await AuthorizationService.AuthorizeAsync(User, "AdministratorOnly")).Succeeded) {
								<a class="dropdown-item" href="@Url.Action("index", "account", new { area = "admin" })"><i class="fa fa-fw fa-cogs"></i> Admin Panel</a>
								<div class="dropdown-divider"></div>
								}
								<a class="dropdown-item" href="@Url.Action("settings", "user", new { area = String.Empty })"><i class="fa fa-fw fa-sliders"></i> Settings</a>
								<div class="dropdown-divider"></div>
								<a class="dropdown-item" href="@Url.RouteUrl("logout")"><i class="fa fa-fw fa-power-off"></i> Logout</a>
							</div>
						</li>
					</ul>
				</div>
			</div>
		</nav>

		<div class="container">
			@RenderBody()

			<hr />
			<footer>
				<p class="pull-left">&copy; 2018 - Notes!</p>
				<p class="pull-right">powered by <a href="https://github.com/virtualdreams/notes-core" title="Notes!">Notes!</a></p>
			</footer>
		</div>

		@await Html.PartialAsync("_ScriptsPartial")

		@RenderSection("script", required: false)
	</body>
</html>
