@model Notes.Models.NoteListContainer
@using Microsoft.AspNetCore.Authorization
@using Notes.Extensions
@inject IAuthorizationService AuthorizationService

@{
	ViewBag.Title = "Trash - ";
}

<div class="row">
	<div class="col-lg-12">
		<div class="pb-2 mt-4 mb-2 border-bottom">
			<h1>
				<i class="fa-solid fa-fw fa-trash"></i> Trash
			</h1>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-lg-12">
		@if(Model.Notes.Count() > 0) {
			<form asp-controller="note" asp-action="delete" method="post" enctype="multipart/form-data" id="trash-form" >
				<div class="table-responsive">
					<table class="table">
						<thead>
							<tr>
								<th style="width: 30px;">
									<input class="form-check-input" type="checkbox" id="selectAll">
								</th>
								<th>
									Title
								</th>
								<th style="text-align: right; width: 170px;">
									<i class="fa fs-fw fa-clock-o"></i> Last modified
								</th>
							</tr>
						</thead>
						<tbody>
							@foreach(var note in Model.Notes) {
							<tr>
								<td>
									<input class="form-check-input" type="checkbox" name="id" value="@note.Id">
								</td>
								<td>
									<a asp-route="view" asp-route-id="@note.Id" asp-route-slug="@note.Title.ToSlug()">@note.Title</a>
								</td>
								<td>
									<span data-bs-toggle="tooltip" data-bs-placement="top" title="@await Component.InvokeAsync("FormatDate", new { date = note.Modified })" class="float-end text-muted small">
										<em>@note.Modified.ToAge()</em>
									</span>
								</td>
							</tr>
							}
						</tbody>
					</table>
				</div>
				@if((await AuthorizationService.AuthorizeAsync(User, "AdministratorOnly")).Succeeded) {
				<button class="btn btn-danger" type="submit"><i class="fa-solid fa-fw fa-square-check"></i> Delete</button>
				}
				<button class="btn btn-success" type="submit" asp-controller="note" asp-action="restore"><i class="fa-solid fa-fw fa-square-check"></i> Restore</button>
			</form>
		} else {
			@:The trash is empty.
		}
	</div>
</div>

@if(Model.Pager.HasNext) {
<div class="row">
	<div class="col-lg-12">
		<nav>
			<ul class="pagination justify-content-center">
				<li class="page-item">
					<a class="page-link" asp-route="trash" asp-route-after="@Model.Pager.NextPage" rel="nofollow next">Older</a>
				</li>
			</ul>
		</nav>
	</div>
</div>
}
